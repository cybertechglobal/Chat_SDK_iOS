// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name BrrmChatFramework
import Foundation
import NotificationCenter
import Security
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct BrrmGroup : Swift.Codable {
  public var id: Swift.String
  public var name: Swift.String
  public init(id: Swift.String, name: Swift.String)
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
extension BrrmChatFramework.BrrmGroup {
  public init?(json: [Swift.String : Any])
}
@_hasMissingDesignatedInitializers public class BrrmChat {
  public static var shared: BrrmChatFramework.BrrmChat
  public func setToken(applicationToken: Swift.String)
  public func register(user: BrrmChatFramework.BrrmUser, group: BrrmChatFramework.BrrmGroup, fcmToken: Swift.String?)
  public func openChatList()
  public func setFMCToken(fcmToken: Swift.String)
  public func notification(userInfo: [Swift.AnyHashable : Any])
  public func isBrrmChatNotification(userInfo: [Swift.AnyHashable : Any]) -> Swift.Bool
  @objc deinit
}
public struct BrrmUser : Swift.Codable {
  public init(id: Swift.String, email: Swift.String, name: Swift.String, isGroupAdmin: Swift.Bool = false)
  public func encode(to encoder: any Swift.Encoder) throws
  public init(from decoder: any Swift.Decoder) throws
}
extension BrrmChatFramework.BrrmUser {
  public init?(json: [Swift.String : Any])
}
